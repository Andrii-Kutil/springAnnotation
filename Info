IoC это передача создания и управления обьектами Springу.
DI внедрение зависимостей, делает обьекты слабозависимые друг от друга.
--------------------------------------------------------------------------
Scope:
singleton - один обьект для всех, создается бин после запуска контейнера
prototype - не один для всех, не создается бин после запуска контейнера
request
session
global-session
--------------------------------------------------------------------------
Методы init-method, destroy-method и factory-method.
Создаем в класе бина для которого нужные эти методы. Можно любой тип подификатора доступа, void(не обязательно но смылса в return нету), без аргументов
1)init-method="doMyInit".
2)destroy-method="doMyDestroy". Для скоупа prototype не вызыввается этот метод. Чаще всего используется для закрытия каких либо ресурсов, например стримы/БД.
3)factory-method="". Предлагает создавать обьекты не через new. Что б этот метод использовать нужно сделать пустой конструктор private.
--------------------------------------------------------------------------
Жизненный цикл бина:
1)запуск приложения
2)запуск контейнера
3)на основе конфигурационного файла создание и наполнение контейнера бинами
4)внедрение в бины зависимостей
5)выполнение метода init-method, если он есть
6)конец работы контейнера
7)выполнение метода destroy-method, если он есть
8)остановка приложения
--------------------------------------------------------------------------
Способы конфигурации контейнера:
1)xml
2)annotation
3)java
--------------------------------------------------------------------------
Зависимости можно внедрять с помощью:
1)конструктора
2сеттера
3)@Autowired
4)@Bean